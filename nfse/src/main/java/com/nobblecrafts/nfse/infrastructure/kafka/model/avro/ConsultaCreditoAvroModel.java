/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.nobblecrafts.nfse.infrastructure.kafka.model.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ConsultaCreditoAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3226497887983543687L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ConsultaCreditoAvroModel\",\"namespace\":\"com.nobblecrafts.nfse.infrastructure.kafka.model.avro\",\"fields\":[{\"name\":\"tipoConsulta\",\"type\":{\"type\":\"enum\",\"name\":\"AvroTipoConsulta\",\"symbols\":[\"NFSE\",\"CREDITO\"]}},{\"name\":\"identificador\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"timestamp\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<ConsultaCreditoAvroModel> ENCODER =
      new BinaryMessageEncoder<ConsultaCreditoAvroModel>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ConsultaCreditoAvroModel> DECODER =
      new BinaryMessageDecoder<ConsultaCreditoAvroModel>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ConsultaCreditoAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ConsultaCreditoAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ConsultaCreditoAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ConsultaCreditoAvroModel>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ConsultaCreditoAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ConsultaCreditoAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ConsultaCreditoAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ConsultaCreditoAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private com.nobblecrafts.nfse.infrastructure.kafka.model.avro.AvroTipoConsulta tipoConsulta;
  private java.lang.String identificador;
  private java.time.Instant timestamp;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ConsultaCreditoAvroModel() {}

  /**
   * All-args constructor.
   * @param tipoConsulta The new value for tipoConsulta
   * @param identificador The new value for identificador
   * @param timestamp The new value for timestamp
   */
  public ConsultaCreditoAvroModel(com.nobblecrafts.nfse.infrastructure.kafka.model.avro.AvroTipoConsulta tipoConsulta, java.lang.String identificador, java.time.Instant timestamp) {
    this.tipoConsulta = tipoConsulta;
    this.identificador = identificador;
    this.timestamp = timestamp.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return tipoConsulta;
    case 1: return identificador;
    case 2: return timestamp;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: tipoConsulta = (com.nobblecrafts.nfse.infrastructure.kafka.model.avro.AvroTipoConsulta)value$; break;
    case 1: identificador = value$ != null ? value$.toString() : null; break;
    case 2: timestamp = (java.time.Instant)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'tipoConsulta' field.
   * @return The value of the 'tipoConsulta' field.
   */
  public com.nobblecrafts.nfse.infrastructure.kafka.model.avro.AvroTipoConsulta getTipoConsulta() {
    return tipoConsulta;
  }


  /**
   * Sets the value of the 'tipoConsulta' field.
   * @param value the value to set.
   */
  public void setTipoConsulta(com.nobblecrafts.nfse.infrastructure.kafka.model.avro.AvroTipoConsulta value) {
    this.tipoConsulta = value;
  }

  /**
   * Gets the value of the 'identificador' field.
   * @return The value of the 'identificador' field.
   */
  public java.lang.String getIdentificador() {
    return identificador;
  }


  /**
   * Sets the value of the 'identificador' field.
   * @param value the value to set.
   */
  public void setIdentificador(java.lang.String value) {
    this.identificador = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public java.time.Instant getTimestamp() {
    return timestamp;
  }


  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.time.Instant value) {
    this.timestamp = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Creates a new ConsultaCreditoAvroModel RecordBuilder.
   * @return A new ConsultaCreditoAvroModel RecordBuilder
   */
  public static com.nobblecrafts.nfse.infrastructure.kafka.model.avro.ConsultaCreditoAvroModel.Builder newBuilder() {
    return new com.nobblecrafts.nfse.infrastructure.kafka.model.avro.ConsultaCreditoAvroModel.Builder();
  }

  /**
   * Creates a new ConsultaCreditoAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ConsultaCreditoAvroModel RecordBuilder
   */
  public static com.nobblecrafts.nfse.infrastructure.kafka.model.avro.ConsultaCreditoAvroModel.Builder newBuilder(com.nobblecrafts.nfse.infrastructure.kafka.model.avro.ConsultaCreditoAvroModel.Builder other) {
    if (other == null) {
      return new com.nobblecrafts.nfse.infrastructure.kafka.model.avro.ConsultaCreditoAvroModel.Builder();
    } else {
      return new com.nobblecrafts.nfse.infrastructure.kafka.model.avro.ConsultaCreditoAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new ConsultaCreditoAvroModel RecordBuilder by copying an existing ConsultaCreditoAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new ConsultaCreditoAvroModel RecordBuilder
   */
  public static com.nobblecrafts.nfse.infrastructure.kafka.model.avro.ConsultaCreditoAvroModel.Builder newBuilder(com.nobblecrafts.nfse.infrastructure.kafka.model.avro.ConsultaCreditoAvroModel other) {
    if (other == null) {
      return new com.nobblecrafts.nfse.infrastructure.kafka.model.avro.ConsultaCreditoAvroModel.Builder();
    } else {
      return new com.nobblecrafts.nfse.infrastructure.kafka.model.avro.ConsultaCreditoAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for ConsultaCreditoAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ConsultaCreditoAvroModel>
    implements org.apache.avro.data.RecordBuilder<ConsultaCreditoAvroModel> {

    private com.nobblecrafts.nfse.infrastructure.kafka.model.avro.AvroTipoConsulta tipoConsulta;
    private java.lang.String identificador;
    private java.time.Instant timestamp;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.nobblecrafts.nfse.infrastructure.kafka.model.avro.ConsultaCreditoAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.tipoConsulta)) {
        this.tipoConsulta = data().deepCopy(fields()[0].schema(), other.tipoConsulta);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.identificador)) {
        this.identificador = data().deepCopy(fields()[1].schema(), other.identificador);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[2].schema(), other.timestamp);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
    }

    /**
     * Creates a Builder by copying an existing ConsultaCreditoAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(com.nobblecrafts.nfse.infrastructure.kafka.model.avro.ConsultaCreditoAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.tipoConsulta)) {
        this.tipoConsulta = data().deepCopy(fields()[0].schema(), other.tipoConsulta);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.identificador)) {
        this.identificador = data().deepCopy(fields()[1].schema(), other.identificador);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[2].schema(), other.timestamp);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'tipoConsulta' field.
      * @return The value.
      */
    public com.nobblecrafts.nfse.infrastructure.kafka.model.avro.AvroTipoConsulta getTipoConsulta() {
      return tipoConsulta;
    }


    /**
      * Sets the value of the 'tipoConsulta' field.
      * @param value The value of 'tipoConsulta'.
      * @return This builder.
      */
    public com.nobblecrafts.nfse.infrastructure.kafka.model.avro.ConsultaCreditoAvroModel.Builder setTipoConsulta(com.nobblecrafts.nfse.infrastructure.kafka.model.avro.AvroTipoConsulta value) {
      validate(fields()[0], value);
      this.tipoConsulta = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'tipoConsulta' field has been set.
      * @return True if the 'tipoConsulta' field has been set, false otherwise.
      */
    public boolean hasTipoConsulta() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'tipoConsulta' field.
      * @return This builder.
      */
    public com.nobblecrafts.nfse.infrastructure.kafka.model.avro.ConsultaCreditoAvroModel.Builder clearTipoConsulta() {
      tipoConsulta = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'identificador' field.
      * @return The value.
      */
    public java.lang.String getIdentificador() {
      return identificador;
    }


    /**
      * Sets the value of the 'identificador' field.
      * @param value The value of 'identificador'.
      * @return This builder.
      */
    public com.nobblecrafts.nfse.infrastructure.kafka.model.avro.ConsultaCreditoAvroModel.Builder setIdentificador(java.lang.String value) {
      validate(fields()[1], value);
      this.identificador = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'identificador' field has been set.
      * @return True if the 'identificador' field has been set, false otherwise.
      */
    public boolean hasIdentificador() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'identificador' field.
      * @return This builder.
      */
    public com.nobblecrafts.nfse.infrastructure.kafka.model.avro.ConsultaCreditoAvroModel.Builder clearIdentificador() {
      identificador = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public java.time.Instant getTimestamp() {
      return timestamp;
    }


    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public com.nobblecrafts.nfse.infrastructure.kafka.model.avro.ConsultaCreditoAvroModel.Builder setTimestamp(java.time.Instant value) {
      validate(fields()[2], value);
      this.timestamp = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public com.nobblecrafts.nfse.infrastructure.kafka.model.avro.ConsultaCreditoAvroModel.Builder clearTimestamp() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ConsultaCreditoAvroModel build() {
      try {
        ConsultaCreditoAvroModel record = new ConsultaCreditoAvroModel();
        record.tipoConsulta = fieldSetFlags()[0] ? this.tipoConsulta : (com.nobblecrafts.nfse.infrastructure.kafka.model.avro.AvroTipoConsulta) defaultValue(fields()[0]);
        record.identificador = fieldSetFlags()[1] ? this.identificador : (java.lang.String) defaultValue(fields()[1]);
        record.timestamp = fieldSetFlags()[2] ? this.timestamp : (java.time.Instant) defaultValue(fields()[2]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ConsultaCreditoAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<ConsultaCreditoAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ConsultaCreditoAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<ConsultaCreditoAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










